// <auto-generated />
using System;
using Currency.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Currency.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210418171345_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14");

            modelBuilder.Entity("TestRncb.Valute.ConvertCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EntityCurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UAH")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UER")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("USD")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityCurrencyId");

                    b.ToTable("ConvertCurrency");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ConvertCurrency");
                });

            modelBuilder.Entity("CurrencyDbModel.EntityCurrency", b =>
                {
                    b.HasBaseType("TestRncb.Valute.ConvertCurrency");

                    b.Property<string>("CharCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nominal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("EntityCurrency");
                });

            modelBuilder.Entity("TestRncb.Valute.ConvertCurrency", b =>
                {
                    b.HasOne("CurrencyDbModel.EntityCurrency", null)
                        .WithMany("ConvertCurrencies")
                        .HasForeignKey("EntityCurrencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
